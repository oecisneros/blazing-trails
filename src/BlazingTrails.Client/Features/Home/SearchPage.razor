@using BlazingTrails.Client.Providers;

@page "/search/{SearchTerm}"
@inject ITrailProvider provider

<PageTitle>Search Trails - Blazing Trails</PageTitle>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">Search</li>
    </ol>
</nav>

<h3 class="mt-5 mb-4">Search results for "@SearchTerm"</h3>
<SearchFilter SearchTerm="@SearchTerm" MaxLength="MaxLength" MaxTime="MaxTime" />

@if (searchResults is { })
{
    <TrailDetails Trail="selectedTrail" />
    <div class="grid">
        @foreach (var trail in searchResults)
        {
            <TrailCard Trail="trail" OnSelected="SelectTrail" />
        }
    </div>
}
else
{
    <p>Loading search results...</p>
}

@code {
    private Trail? selectedTrail;

    private IEnumerable<Trail>? trails;

    private IEnumerable<Trail>? searchResults;

    [Parameter]
    public string SearchTerm { get; set; } = default!;

    [Parameter, SupplyParameterFromQuery]
    public int MaxLength { get; set; }

    [Parameter, SupplyParameterFromQuery]
    public int MaxTime { get; set; }

    private void SelectTrail(Trail trail) => selectedTrail = trail;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            trails = await provider.GetTrailsAsync();
            trails = trails?.Where(x => x.Name.Contains(SearchTerm, true) || x.Location.Contains(SearchTerm, true));
            searchResults = trails;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"There was a problem loading trail data: {ex.Message}");
        }
    }

    protected override void OnParametersSet()
    {
        var query = trails;

        if (MaxLength.GreaterThanZero())
        {
            query = query?.Where(x => x.Length <= MaxLength);
        }

        if (MaxTime.GreaterThanZero())
        {
            query = query?.Where(x => x.TimeInMinutes <= MaxTime * 60);
        }

        searchResults = query;
        selectedTrail = null;
    }
}